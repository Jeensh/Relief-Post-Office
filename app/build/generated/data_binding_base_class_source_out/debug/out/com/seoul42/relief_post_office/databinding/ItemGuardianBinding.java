// Generated by view binder compiler. Do not edit!
package com.seoul42.relief_post_office.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.seoul42.relief_post_office.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemGuardianBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox itemGuardianCheck;

  @NonNull
  public final ImageView itemGuardianImg;

  @NonNull
  public final TextView itemGuardianText;

  @NonNull
  public final LinearLayout itemUserLayout;

  private ItemGuardianBinding(@NonNull ConstraintLayout rootView,
      @NonNull CheckBox itemGuardianCheck, @NonNull ImageView itemGuardianImg,
      @NonNull TextView itemGuardianText, @NonNull LinearLayout itemUserLayout) {
    this.rootView = rootView;
    this.itemGuardianCheck = itemGuardianCheck;
    this.itemGuardianImg = itemGuardianImg;
    this.itemGuardianText = itemGuardianText;
    this.itemUserLayout = itemUserLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGuardianBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGuardianBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_guardian, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGuardianBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_guardian_check;
      CheckBox itemGuardianCheck = ViewBindings.findChildViewById(rootView, id);
      if (itemGuardianCheck == null) {
        break missingId;
      }

      id = R.id.item_guardian_img;
      ImageView itemGuardianImg = ViewBindings.findChildViewById(rootView, id);
      if (itemGuardianImg == null) {
        break missingId;
      }

      id = R.id.item_guardian_text;
      TextView itemGuardianText = ViewBindings.findChildViewById(rootView, id);
      if (itemGuardianText == null) {
        break missingId;
      }

      id = R.id.item_user_layout;
      LinearLayout itemUserLayout = ViewBindings.findChildViewById(rootView, id);
      if (itemUserLayout == null) {
        break missingId;
      }

      return new ItemGuardianBinding((ConstraintLayout) rootView, itemGuardianCheck,
          itemGuardianImg, itemGuardianText, itemUserLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
